{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","valueName","onChangeName","valueNumber","onChangeNumber","type","Persons","persons","filter","person","name","toLocaleLowerCase","indexOf","newSearch","toLowerCase","map","number","id","onClick","handleDeletePerson","Notification","successMessage","failureMessage","className","baseUrl","axios","get","then","response","data","personObject","post","delete","put","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewSearch","setSuccessMessage","setFailureMessage","useEffect","personService","initialPersons","event","target","preventDefault","find","message","window","confirm","returnedPerson","p","setTimeout","catch","error","concat","parseInt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15eeaa4e.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Filter = (props) => {\r\n return (\r\n  <div>\r\n   filter shown with: <input value={props.value} onChange={props.onChange} />\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Filter\r\n","import React from \"react\"\r\n\r\nconst PersonForm = (props) => {\r\n return (\r\n  <form onSubmit={props.onSubmit}>\r\n   <div>\r\n    name: <input value={props.valueName} onChange={props.onChangeName} />\r\n   </div>\r\n   <div>\r\n    number: <input value={props.valueNumber} onChange={props.onChangeNumber} />\r\n   </div>\r\n   <div>\r\n    <button type=\"submit\">add</button>\r\n   </div>\r\n  </form>\r\n )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Persons = (props) => {\r\n    return (\r\n        <div>\r\n        {props.persons.filter(person => \r\n            person.name.toLocaleLowerCase().indexOf(props.newSearch.toLowerCase()) !== -1)\r\n            .map(person => \r\n            <h3 key={person.id}>\r\n                {person.name} \r\n                {person.number}\r\n                <button value={person.id} onClick={props.handleDeletePerson}>delete</button>\r\n            </h3>\r\n            )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Notification = ({ successMessage, failureMessage }) => {\r\n    if (successMessage === null && failureMessage === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <>\r\n            {successMessage === null  \r\n                ? <div className=\"failure\">{failureMessage}</div> \r\n                : <div className=\"success\">{successMessage}</div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Notification","\r\nimport axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = personObject => {\r\n    return axios.post(baseUrl, personObject)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, personObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, personObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, deletePerson, update }","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n const [persons, setPersons] = useState([])\n const [newName, setNewName] = useState('')\n const [newNumber, setNewNumber] = useState('')\n const [newSearch, setNewSearch] = useState('')\n const [successMessage, setSuccessMessage] = useState(null)\n const [failureMessage, setFailureMessage] = useState(null)\n\n const hook = () => {\n    personService.getAll()\n        .then(initialPersons => {\n            setPersons(initialPersons)\n        })\n }\n useEffect(hook, [])\n\n const handleNameChange = (event) => {\n  setNewName(event.target.value)\n }\n\n const handleNumberChange = (event) => {\n  setNewNumber(event.target.value)\n }\n\n const handleSearchChange = (event) => {\n  setNewSearch(event.target.value)\n }\n\n const handleDeletePerson = (event) => {\n    const id = parseInt(event.target.value)\n    const [person] = persons.filter(p => p.id === id)\n    if (window.confirm(`Delete ${person.name} ? `)) {\n        personService.deletePerson(id)\n        setPersons(persons.filter(p => p.id !== id))\n    }\n}\n\n const addPerson = (event) => {\n  event.preventDefault()\n  const person =\n  persons.find(person => person.name === newName) || ''\n  if (person.name === newName) {\n      const message = `${newName} is already added to phonebook, replace the old number with a new one?`\n   if (window.confirm(message)) {\n        const personObject = { \n            name: newName, \n            number: newNumber\n        }\n        personService.update(person.id, personObject)\n            .then( returnedPerson => {\n                setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n                setSuccessMessage(\n                    `${newName}'s number was changed`\n                  )\n                  setTimeout(() => {\n                    setSuccessMessage(null)\n                  }, 5000)\n            }).catch(error => {\n                setFailureMessage(\n                    `Information of ${personObject.name} has already been removed from the server`\n                )\n                setPersons(persons.filter(p => p.name !== personObject.name))\n                setTimeout(() => {\n                    setFailureMessage(null)\n                  }, 5000)\n            })\n   }\n  } else {\n   const personObject = {\n    name: newName,\n    number: newNumber,\n   }\n   personService.create(personObject)\n    .then( response => {\n        setPersons(persons.concat(response.data))\n        setSuccessMessage(\n            `Added ${newName}`\n          )\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n    })\n\n  }\n  setNewName('')\n  setNewNumber('')\n }\n\n return (\n  <div>\n   <h1>Phonebook</h1>\n   <Notification successMessage={successMessage} failureMessage={failureMessage}/>\n   <Filter value={newSearch} onChange={handleSearchChange}/>\n   <h2>Add new</h2>\n   <PersonForm \n    onSubmit={addPerson} \n    valueName={newName} \n    onChangeName={handleNameChange} \n    valueNumber={newNumber} \n    onChangeNumber={handleNumberChange}\n   />\n   <h2>Numbers</h2>\n   <Persons \n    persons={persons} \n    newSearch={newSearch} \n    handleDeletePerson={handleDeletePerson}\n   />\n  </div>\n )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './Index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}